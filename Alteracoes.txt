    --------Lugar para falar oq alterou em cada commit--------

---Commit 3---

    -Primeiro commit com codigo real

    -Criei a classe biblioteca, onde fica salvo os livros e os usuarios

    -Comecei a montar o metodo cadastrar leitor e adm

    -Criei os metodos para cadastrar um livro novo, só podem ser chamados por administradores, o código passa pelas classes
    Administrador e biblioteca onde vai criar e salvar o leitor

    -Comecei o metodo mostrar acervo

    -Criei o metodo de pegar livro emprestado, que é chamado pela biblioteca, onde pede os dados e confirma o leitor e livro,
     e passa para dentro do Livro onde cria o emprestimo com datas atuais, depois emprestimo adiciona isso ao historico do leitor

    Obs: emprestimo coloquei para quando a pessoa já pega, ent quando alguem pegar o livro reservado aí sim ele vira um emprestimo

    Todo:
        Fazer classe de reserva, metodo de mostrar acervo, criar cadastro de adm e leitor interativo, calcular multa,
        criar metodo devolver em livro (chamada por leitor ou biblioteca //ver depois), gerenciarUsuario e gerarRelatorio
        de Administrador.

--Commit 4--

    -Remoção de parâmetros da função de cadastrar e remover livro, que passava a propria biblioteca como parâmetro

    Todo:
        Fazer classe de reserva, metodo de mostrar acervo, criar cadastro de adm e leitor interativo, calcular multa,
        criar metodo devolver em livro (chamada por leitor ou biblioteca //ver depois), gerenciarUsuario e gerarRelatorio
        de Administrador.

--Commit 5--

    -Adição da função de mostrar o acervo

    Todo:
            Fazer classe de reserva, criar cadastro de adm e leitor interativo, calcular multa, criar metodo devolver em livro
            (chamada por leitor ou biblioteca //ver depois), gerenciarUsuario e gerarRelatorio de Administrador.

--Commit 6--

    -Alteração do tipo de ID da classe Usuario, por consequencia alterei o modo de comparação dentro dos metodos removerLivro
    e realizarEmprestimo

    -Alteração do atributo idUnico(Livro) e id(Usuario) nos construtores, removi eles dos parametros e agora os valores de
    id são gerados automaticamente pela variavel contadorId. No caso do idUnico(Livro) por ser uma String, adicionei uma
    concatenação de Strings no proprio construtor

    -Adicionei o atributo senha a classe/construtor Administarador

    -Criei os metodos de cadastro de adm e leitor interativo(Confirmação de senha para Adm) -> podemos utilizar throw

    -Criei metodo abstrato mostrarUsuario (temporario) -> para ficar mais visivel;

    Obs: Precismos pensar sobre o Login dos usuarios na biblioteca e montar o switch case tip o "TAD";
    Todo:
                Fazer classe de reserva, calcular multa, criar metodo devolver em livro
                (chamada por leitor ou biblioteca //ver depois), gerenciarUsuario e gerarRelatorio de Administrador,
                analisar o incremento de arquivos txt para deixar usuarios/senhas/livros salvos e adidioncar mecanismos.
                de try catch throw.
